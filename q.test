
    Tested endpoint: blogs

    Tested method: POST

    Expected status: 400

    Received status: 400

    Passed body: {"nam":"somename","websiteUrl":"invalid-url","description":"description"}

    Expected data: { errorsMessages: [{ message: Any<String>, field: "websiteUrl" }, { message: Any<String>, field: "name" }] }

    Received data: {"errorsMessages":[{"message":"Invalid value","field":"name"}]}

      40 |     }
      41 |
    > 42 |     expect(response).toBeError(400, incorrectFields, requestBody, {
         |                      ^
      43 |       endpoint: url,
      44 |       method,
      45 |     });

      at performTestsWithIncorrectBody (src/tests/jest/back/testHelpers/performTestsWithIncorrectBody.ts:42:22)
      at Object.<anonymous> (src/tests/jest/back/describes/blogs/blogs-validation-describe.ts:37:7)

  > Homework 2  Blogs api  Blog body validation  PUT -> "/blogs/:id": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs;



    Tested endpoint: blogs/6

    Tested method: PUT

    Expected status: 400

    Received status: 400

    Passed body: {"nam":"somename","websiteUrl":"invalid-url","description":"description"}

    Expected data: { errorsMessages: [{ message: Any<String>, field: "websiteUrl" }, { message: Any<String>, field: "name" }] }

    Received data: {"errorsMessages":[{"message":"Invalid value","field":"name"}]}

      40 |     }
      41 |
    > 42 |     expect(response).toBeError(400, incorrectFields, requestBody, {
         |                      ^
      43 |       endpoint: url,
      44 |       method,
      45 |     });

      at performTestsWithIncorrectBody (src/tests/jest/back/testHelpers/performTestsWithIncorrectBody.ts:42:22)
      at Object.<anonymous> (src/tests/jest/back/describes/blogs/blogs-validation-describe.ts:60:7)

  > Homework 2  Posts api  POST -> "/posts": should create new post for an existing blog; status 201; content: created post;  used additional methods: POST -> /blogs, GET -> /posts/:id;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: posts
     method: post
     response status: 404
     request body: {"content":"new post content","shortDescription":"description","title":"post title","blogId":"7"}
     response data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/posts/posts-describe.ts:98:41
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-describe.ts:95:64)

  > Homework 2  Posts api  GET -> "/posts/:id": should return status 200; content: post by id;  used additional methods: POST -> /blogs, POST -> /posts;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: posts
     method: post
     response status: 404
     request body: {"content":"new post content","shortDescription":"description","title":"post title","blogId":"8"}
     response data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/posts/posts-describe.ts:130:41
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-describe.ts:127:37)

  > Homework 2  Posts api  GET -> "/posts": should return status 200; content: posts array;  used additional methods: POST -> /blogs, POST -> /posts;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: posts
     method: post
     response status: 404
     request body: {"content":"new post content","shortDescription":"description","title":"post title","blogId":"9"}
     response data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/posts/posts-describe.ts:68:75
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-describe.ts:68:7)

  > Homework 2  Posts api  PUT -> "/posts/:id": should update post by id; status 204;  used additional methods: POST -> /blogs, POST -> /posts, GET -> /posts/:id;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: posts
     method: post
     response status: 404
     request body: {"content":"new post content","shortDescription":"description","title":"post title","blogId":"10"}
     response data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/posts/posts-describe.ts:161:41
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-describe.ts:158:37)

  > Homework 2  Posts api  DELETE -> "/posts/:id": should delete post by id; status 204;  used additional methods: POST -> /blogs, POST -> /posts, GET -> /posts/:id;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: posts
     method: post
     response status: 404
     request body: {"content":"new post content","shortDescription":"description","title":"post title","blogId":"11"}
     response data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/posts/posts-describe.ts:201:41
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-describe.ts:198:37)

  > Homework 2  Posts api  PUT, POST, DELETE -> "/posts": should return error if auth credentials is incorrect; status 401;  used additional methods: POST -> /blogs;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: posts
     method: post
     response status: 404
     request body: {"content":"new post content","shortDescription":"description","title":"post title","blogId":"13"}
     response data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:189:38
      at performAuthTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:184:46)
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-describe.ts:247:7)

  > Homework 2  Posts api  Post body validation  POST -> "/posts": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs;



    Tested endpoint: posts

    Tested method: POST

    Expected status: 400

    Received status: 404

    Passed body: {"title":"length_31-DrmM8lHeNjSykwSzQ7Her","content":"valid","blogId":"14"}

    Expected data: { errorsMessages: [{ message: Any<String>, field: "shortDescription" }, { message: Any<String>, field: "title" }] }

    Received data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      40 |     }
      41 |
    > 42 |     expect(response).toBeError(400, incorrectFields, requestBody, {
         |                      ^
      43 |       endpoint: url,
      44 |       method,
      45 |     });

      at performTestsWithIncorrectBody (src/tests/jest/back/testHelpers/performTestsWithIncorrectBody.ts:42:22)
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-validation-describe.ts:83:7)

  > Homework 2  Posts api  Post body validation  PUT -> "/posts": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs, POST -> /posts;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: posts
     method: post
     response status: 404
     request body: {"content":"new post content","shortDescription":"description","title":"post title","blogId":"15"}
     response data: "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot POST /posts</pre>\n</body>\n</html>\n"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/posts/posts-validation-describe.ts:115:41
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-validation-describe.ts:109:37)
