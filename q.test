  > Homework 2  Posts api  PUT -> "/posts/:id": should update post by id; status 204;  used additional methods: POST -> /blogs, POST -> /posts, GET -> /posts/:id;



    Expected: success response

    Received: Request failed with status code 400

    Config:
     url: posts/4
     method: put
     response status: 400
     request body: {"content":"content after update","shortDescription":"shortDescription after update","title":"title updated","blogId":"10"}
     response data: {"errorsMessages":[{"message":"blogId already in use","field":"blogId"}]}

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:103:38
          at runMicrotasks (<anonymous>)
      at performPUTTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:98:50)
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-describe.ts:170:7)

  > Homework 2  Posts api  Post body validation  POST -> "/posts": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs;



    Tested endpoint: posts

    Tested method: POST

    Expected status: 400

    Received status: 400

    Passed body: {"title":"valid","content":"valid","blogId":"602afe92-7d97-4395-b1b9-6cf98b351bbe","shortDescription":"length_101-DnZlTI1khUHpqOqCzftIYiSHCV8fKjYFQOoCIwmUczzW9V5K8cqY3aPKo3XKwbfrmeWOJyQgGnlX5sP3aW3RlaRSQx"}

    Expected data: { errorsMessages: [{ message: Any<String>, field: "shortDescription" }, { message: Any<String>, field: "blogId" }] }

    Received data: {"errorsMessages":[{"message":"Invalid value","field":"shortDescription"}]}

      40 |     }
      41 |
    > 42 |     expect(response).toBeError(400, incorrectFields, requestBody, {
         |                      ^
      43 |       endpoint: url,
      44 |       method,
      45 |     });

      at performTestsWithIncorrectBody (src/tests/jest/back/testHelpers/performTestsWithIncorrectBody.ts:42:22)
          at runMicrotasks (<anonymous>)
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-validation-describe.ts:83:7)

  > Homework 2  Posts api  Post body validation  PUT -> "/posts": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs, POST -> /posts;



    Tested endpoint: posts/6

    Tested method: PUT

    Expected status: 400

    Received status: 400

    Passed body: {"title":"length_31-DrmM8lHeNjSykwSzQ7Her","content":"valid","blogId":"15"}

    Expected data: { errorsMessages: [{ message: Any<String>, field: "shortDescription" }, { message: Any<String>, field: "title" }] }

    Received data: {"errorsMessages":[{"message":"Invalid value","field":"title"},{"message":"Invalid value","field":"shortDescription"},{"message":"blogId already in use","field":"blogId"}]}

      40 |     }
      41 |
    > 42 |     expect(response).toBeError(400, incorrectFields, requestBody, {
         |                      ^
      43 |       endpoint: url,
      44 |       method,
      45 |     });

      at performTestsWithIncorrectBody (src/tests/jest/back/testHelpers/performTestsWithIncorrectBody.ts:42:22)
          at runMicrotasks (<anonymous>)
      at Object.<anonymous> (src/tests/jest/back/describes/posts/posts-validation-describe.ts:117:7)
