  > Homework 4  Blogs with pagination  POST, GET -> "/blogs/:blogId/posts": should return error if :id from uri param not found; status 404;



    Tested case params:
     endpoint: blogs/602afe92-7d97-4395-b1b9-6cf98b351bbe/posts,
     method: GET,
     headers: {"Authorization":"Basic YWRtaW46cXdlcnR5"},

    Expected status: 404

    Received status: undefined

      49 |       }
      50 |
    > 51 |       expect(status).toBeWith4xxStatus(expectedStatusCode, {
         |                      ^
      52 |         headers,
      53 |         endpoint,
      54 |         method,

      at performEndpointErrorChecker (src/tests/jest/back/testHelpers/performCheckers.ts:51:22)
      at Object.<anonymous> (src/tests/jest/back/describes/blogs/blogs-with-pagination-describe.ts:134:7)

  > Homework 4  Blogs with pagination  GET -> "/blogs/:blogId/posts": should return status 200; content: posts for specific blog with pagination;  used additional methods: POST -> /blogs, POST -> /posts;

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: undefined

      102 |     }
      103 |
    > 104 |     expect(status).toBe(expectedStatusCode);
          |                    ^
      105 |
      106 |     if (expectedData) {
      107 |       expect(data).toBeEqualWithQueryParams(expectedData, queryParams, withDiffPrint);

      at performQueryParamsChecker (src/tests/jest/back/testHelpers/performCheckers.ts:104:20)
      at Object.<anonymous> (src/tests/jest/back/describes/blogs/blogs-with-pagination-describe.ts:202:7)

  > Homework 4  Blogs with pagination  GET -> "blogs": should return status 200; content: blog array with pagination;  used additional methods: POST -> /blogs, GET -> /blogs;

    Passed queryParams: ""

    Expected: {"pagesCount":2,"page":1,"pageSize":10,"totalCount":12,"items":[{"id":"1684507136071","createdAt":"2023-05-19T14:38:56.071Z","isMembership":false,"name":"Timma","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135763","createdAt":"2023-05-19T14:38:55.763Z","isMembership":false,"name":"Tima","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135589","createdAt":"2023-05-19T14:38:55.589Z","isMembership":false,"name":"Alex","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135456","createdAt":"2023-05-19T14:38:55.456Z","isMembership":false,"name":"Alexey","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135314","createdAt":"2023-05-19T14:38:55.314Z","isMembership":false,"name":"Andrey","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135172","createdAt":"2023-05-19T14:38:55.172Z","isMembership":false,"name":"Don","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135036","createdAt":"2023-05-19T14:38:55.036Z","isMembership":false,"name":"John","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134867","createdAt":"2023-05-19T14:38:54.867Z","isMembership":false,"name":"Gggrrttt","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134716","createdAt":"2023-05-19T14:38:54.716Z","isMembership":false,"name":"Mima","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134577","createdAt":"2023-05-19T14:38:54.577Z","isMembership":false,"name":"Dima","websiteUrl":"https://someurl.com","description":"description"}]}

    Received: {"pagesCount":2,"page":1,"pageSize":10,"totalCount":12,"items":[{"id":"1684507135456","createdAt":"2023-05-19T14:38:55.456Z","isMembership":false,"name":"Alexey","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135589","createdAt":"2023-05-19T14:38:55.589Z","isMembership":false,"name":"Alex","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134867","createdAt":"2023-05-19T14:38:54.867Z","isMembership":false,"name":"Gggrrttt","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135314","createdAt":"2023-05-19T14:38:55.314Z","isMembership":false,"name":"Andrey","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135036","createdAt":"2023-05-19T14:38:55.036Z","isMembership":false,"name":"John","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134716","createdAt":"2023-05-19T14:38:54.716Z","isMembership":false,"name":"Mima","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134372","createdAt":"2023-05-19T14:38:54.372Z","isMembership":false,"name":"timm","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134205","createdAt":"2023-05-19T14:38:54.205Z","isMembership":false,"name":"Tim","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507134577","createdAt":"2023-05-19T14:38:54.577Z","isMembership":false,"name":"Dima","websiteUrl":"https://someurl.com","description":"description"},{"id":"1684507135172","createdAt":"2023-05-19T14:38:55.172Z","isMembership":false,"name":"Don","websiteUrl":"https://someurl.com","description":"description"}]}

      105 |
      106 |     if (expectedData) {
    > 107 |       expect(data).toBeEqualWithQueryParams(expectedData, queryParams, withDiffPrint);
          |                    ^
      108 |     }
      109 |   }
      110 | };

      at performQueryParamsChecker (src/tests/jest/back/testHelpers/performCheckers.ts:107:20)
      at Object.<anonymous> (src/tests/jest/back/describes/blogs/blogs-with-pagination-describe.ts:158:7)

  > Homework 4  Posts with pagination  GET -> "/posts": should return status 200; content: posts array with pagination;  used additional methods: POST -> /blogs, POST -> /posts;

    Passed queryParams: ""

    Expected: {"pagesCount":2,"page":1,"pageSize":10,"totalCount":12,"items":[{"id":"1684507153303","createdAt":"2023-05-19T14:39:13.303Z","blogName":"new blog11","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507152937"},{"id":"1684507152787","createdAt":"2023-05-19T14:39:12.787Z","blogName":"new blog10","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507152559"},{"id":"1684507152422","createdAt":"2023-05-19T14:39:12.422Z","blogName":"new blog9","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507152269"},{"id":"1684507152117","createdAt":"2023-05-19T14:39:12.117Z","blogName":"new blog8","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507151965"},{"id":"1684507151824","createdAt":"2023-05-19T14:39:11.824Z","blogName":"new blog7","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507151688"},{"id":"1684507151526","createdAt":"2023-05-19T14:39:11.526Z","blogName":"new blog6","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507151345"},{"id":"1684507151134","createdAt":"2023-05-19T14:39:11.134Z","blogName":"new blog5","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507150710"},{"id":"1684507150542","createdAt":"2023-05-19T14:39:10.542Z","blogName":"new blog4","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507150399"},{"id":"1684507150245","createdAt":"2023-05-19T14:39:10.245Z","blogName":"new blog3","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507150106"},{"id":"1684507149966","createdAt":"2023-05-19T14:39:09.966Z","blogName":"new blog2","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507149790"}]}

    Received: [{"id":"1684507149335","createdAt":"2023-05-19T14:39:09.335Z","blogName":"new blog0","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507149173"},{"id":"1684507149651","createdAt":"2023-05-19T14:39:09.651Z","blogName":"new blog1","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507149473"},{"id":"1684507149966","createdAt":"2023-05-19T14:39:09.966Z","blogName":"new blog2","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507149790"},{"id":"1684507150245","createdAt":"2023-05-19T14:39:10.245Z","blogName":"new blog3","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507150106"},{"id":"1684507150542","createdAt":"2023-05-19T14:39:10.542Z","blogName":"new blog4","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507150399"},{"id":"1684507151134","createdAt":"2023-05-19T14:39:11.134Z","blogName":"new blog5","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507150710"},{"id":"1684507151526","createdAt":"2023-05-19T14:39:11.526Z","blogName":"new blog6","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507151345"},{"id":"1684507151824","createdAt":"2023-05-19T14:39:11.824Z","blogName":"new blog7","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507151688"},{"id":"1684507152117","createdAt":"2023-05-19T14:39:12.117Z","blogName":"new blog8","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507151965"},{"id":"1684507152422","createdAt":"2023-05-19T14:39:12.422Z","blogName":"new blog9","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507152269"},{"id":"1684507152787","createdAt":"2023-05-19T14:39:12.787Z","blogName":"new blog10","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507152559"},{"id":"1684507153303","createdAt":"2023-05-19T14:39:13.303Z","blogName":"new blog11","content":"new post content","shortDescription":"description","title":"post title","blogId":"1684507152937"}]

      105 |
      106 |     if (expectedData) {
    > 107 |       expect(data).toBeEqualWithQueryParams(expectedData, queryParams, withDiffPrint);
          |                    ^
      108 |     }
      109 |   }
      110 | };

      at performQueryParamsChecker (src/tests/jest/back/testHelpers/performCheckers.ts:107:20)
          at runMicrotasks (<anonymous>)
      at Object.<anonymous> (src/tests/jest/back/describes/posts/postsWithPagination-describe.ts:66:7)
