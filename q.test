  > Homework 6  Comments for posts with auth  POST -> "/posts/:postId/comments": should create new comment; status 201; content: created comment;  used additional methods: POST -> /blogs, POST -> /posts, GET -> /comments/:commentId;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: comments/1687425753768
     method: get
     response status: 404
     request body: undefined
     response data: "Not Found"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:70:38
      at performPOSTTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:68:41)
      at Object.<anonymous> (src/tests/jest/back/describes/comments/comments-V2-describe.ts:97:7)

  > Homework 6  Comments for posts with auth  GET -> "/posts/:postId/comments": should return status 200; content: comments with pagination;  used additional methods: POST -> /blogs, POST -> /posts, POST -> /comments;

    Passed queryParams: ""

    Expected: {"pagesCount":2,"page":1,"pageSize":10,"totalCount":12,"items":[{"id":"1687425757194","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:37.194Z"},{"id":"1687425757026","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:37.026Z"},{"id":"1687425756870","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:36.870Z"},{"id":"1687425756647","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:36.647Z"},{"id":"1687425756413","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:36.413Z"},{"id":"1687425756121","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:36.121Z"},{"id":"1687425755685","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:35.685Z"},{"id":"1687425755488","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:35.488Z"},{"id":"1687425755335","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:35.335Z"},{"id":"1687425755166","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-22T09:22:35.166Z"}]}

    Received: {"pagesCount":2,"page":1,"pageSize":10,"totalCount":12,"items":[{"_id":"649412dd3f9324e5942c33f5","id":"1687425757194","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:37.194Z","__v":0},{"_id":"649412dd3f9324e5942c33f0","id":"1687425757026","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:37.026Z","__v":0},{"_id":"649412dc3f9324e5942c33eb","id":"1687425756870","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:36.870Z","__v":0},{"_id":"649412dc3f9324e5942c33e6","id":"1687425756647","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:36.647Z","__v":0},{"_id":"649412dc3f9324e5942c33e1","id":"1687425756413","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:36.413Z","__v":0},{"_id":"649412dc3f9324e5942c33dc","id":"1687425756121","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:36.121Z","__v":0},{"_id":"649412db3f9324e5942c33d7","id":"1687425755685","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:35.685Z","__v":0},{"_id":"649412db3f9324e5942c33d2","id":"1687425755488","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:35.488Z","__v":0},{"_id":"649412db3f9324e5942c33cd","id":"1687425755335","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:35.335Z","__v":0},{"_id":"649412db3f9324e5942c33c8","id":"1687425755166","postId":"1687425754280","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"9e017998-a8ca-4dec-9e77-ff396c2f75c1","userLogin":"lg-751415"},"createdAt":"2023-06-22T09:22:35.166Z","__v":0}]}

      105 |
      106 |     if (expectedData) {
    > 107 |       expect(data).toBeEqualWithQueryParams(expectedData, queryParams, withDiffPrint);
          |                    ^
      108 |     }
      109 |   }
      110 | };

      at performQueryParamsChecker (src/tests/jest/back/testHelpers/performCheckers.ts:107:20)
      at Object.<anonymous> (src/tests/jest/back/describes/comments/comments-V2-describe.ts:174:7)

  > Homework 6  Comments for posts with auth  PUT -> "/comments/:commentId": should update comment by id; status 204;  used additional methods: POST -> /blogs, POST -> /posts, POST -> /posts/:postId/comments, GET -> /comments/:commentId;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: comments/1687425759067
     method: get
     response status: 404
     request body: undefined
     response data: "Not Found"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:109:38
      at performPUTTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:107:41)
      at Object.<anonymous> (src/tests/jest/back/describes/comments/comments-V2-describe.ts:134:7)

  > Homework 6  Comments for posts with auth  GET -> "comments/:commentsId": should return status 200; content: comment by id;  used additional methods: POST -> /blogs, POST -> /posts, POST -> /posts/:postId/comments;



    Expected: success response

    Received: Request failed with status code 404

    Config:
     url: comments/1687425759848
     method: get
     response status: 404
     request body: undefined
     response data: "Not Found"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:83:38
      at performGETByIdTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestsFlow.ts:81:72)
      at Object.<anonymous> (src/tests/jest/back/describes/comments/comments-V2-describe.ts:202:7)

  > Homework 6  Comments for posts with auth  PUT, DELETE -> "/comments/:id": should return error if access denied; status 403;  used additional methods: POST -> /users;



    Expected: success response

    Received: Request failed with status code 401

    Config:
     url: posts/1687425763267/comments
     method: post
     response status: 401
     request body: {"content":"length_21-weqweqweqwq"}
     response data: "Unauthorized"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/comments/comments-V2-describe.ts:341:24
      at Object.<anonymous> (src/tests/jest/back/describes/comments/comments-V2-describe.ts:340:30)

  > Homework 6  Comments for posts with auth  Comments body validation  POST -> "/posts/:postId/comments": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs, POST -> /posts;



    Tested endpoint: posts/1687425764322/comments

    Tested method: POST

    Expected status: 400

    Received status: 401

    Passed body: {"content":"short"}

    Expected data: { errorsMessages: [{ message: Any<String>, field: "content" }] }

    Received data: "Unauthorized"

      40 |     }
      41 |
    > 42 |     expect(response).toBeError(400, incorrectFields, requestBody, {
         |                      ^
      43 |       endpoint: url,
      44 |       method,
      45 |     });

      at performTestsWithIncorrectBody (src/tests/jest/back/testHelpers/performTestsWithIncorrectBody.ts:42:22)
      at Object.<anonymous> (src/tests/jest/back/describes/comments/comments-body-validatin-v2-describe.ts:47:7)

  > Homework 6  Comments for posts with auth  Comments body validation  PUT -> "/comments/:commentId": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs, POST -> /posts;



    Expected: success response

    Received: Request failed with status code 401

    Config:
     url: posts/1687425764733/comments
     method: post
     response status: 401
     request body: {"content":"length_21-weqweqweqwq"}
     response data: "Unauthorized"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/comments/comments-body-validatin-v2-describe.ts:73:24
      at Object.<anonymous> (src/tests/jest/back/describes/comments/comments-body-validatin-v2-describe.ts:72:30)
