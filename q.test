  > Homework 8  RefreshToken  POST -> "/auth/refresh-token": should return new 'refresh' and 'access' tokens; status 200; content: new JWT 'access' token, new JWT 'refresh' token in cookie (http only, secure);

    expect(received).toEqual(expected) // deep equality

    Expected: StringContaining "."
    Received: undefined

      29 |
      30 |   const setCookieObject = parseCookieString(responseHeaders['set-cookie'][0]);
    > 31 |   expect(setCookieObject.refreshToken).toEqual(expect.stringContaining('.'));
         |                                        ^
      32 |
      33 |   expect(setCookieObject.Secure).toBe(true);
      34 |

      at performTokensTestFlow (src/tests/jest/back/describes/refreshToken/refreshTokenTestsFlow.ts:31:40)
          at runMicrotasks (<anonymous>)
      at Object.<anonymous> (src/tests/jest/back/describes/refreshToken/refreshToken-describe.ts:141:9)

  > Homework 8  RefreshToken  POST -> "/auth/refresh-token", "/auth/logout": should return an error if the "refresh" token has become invalid; status 401;

    expect(received).not.toBeUndefined()

    Received: undefined

      80 |   getOldRefreshToken: (): string => {
      81 |     const oldRefreshToken = expect.getState().oldRefreshToken;
    > 82 |     expect(oldRefreshToken).not.toBeUndefined();
         |                                 ^
      83 |
      84 |     return oldRefreshToken;
      85 |   },

      at Object.getOldRefreshToken (src/tests/jest/back/testHelpers/jestState/usersState.ts:82:33)
      at Object.<anonymous> (src/tests/jest/back/describes/refreshToken/refreshToken-describe.ts:241:43)
          at runMicrotasks (<anonymous>)

  > Homework 8  RefreshToken  POST -> "/auth/logout": should make the 'refresh' token invalid; status 204;



    Expected: success response

    Received: Request failed with status code 401

    Config:
     url: auth/logout
     method: post
     response status: 401
     request body: {}
     response data: "Unauthorized"

      22 |     };
      23 |
    > 24 |     expect(mappedError).printError(description);
         |                         ^
      25 |   }
      26 |
      27 |   throw new Error(error.message);

      at handleTestError (src/tests/jest/back/testHelpers/handleTestError.ts:24:25)
      at src/tests/jest/back/describes/refreshToken/refreshToken-describe.ts:185:24
          at runMicrotasks (<anonymous>)
      at Object.<anonymous> (src/tests/jest/back/describes/refreshToken/refreshToken-describe.ts:184:48)

  > Homework 8  RefreshToken  POST -> "/auth/refresh-token", "/auth/logout": should return an error if the "refresh" token has become invalid; status 401;

    expect(received).not.toBeUndefined()

    Received: undefined

      80 |   getOldRefreshToken: (): string => {
      81 |     const oldRefreshToken = expect.getState().oldRefreshToken;
    > 82 |     expect(oldRefreshToken).not.toBeUndefined();
         |                                 ^
      83 |
      84 |     return oldRefreshToken;
      85 |   },

      at Object.getOldRefreshToken (src/tests/jest/back/testHelpers/jestState/usersState.ts:82:33)
      at Object.<anonymous> (src/tests/jest/back/describes/refreshToken/refreshToken-describe.ts:241:43)
          at runMicrotasks (<anonymous>)
