  > Homework 11  Comment likes  PUT -> "/comments/:commentId/like-status": create comment then:
   dislike the comment by user 1, user 2;
   like the comment by user 3;
   get the comment after each like by user 1; status 204;  used additional methods: POST => /blogs, POST => /posts, POST => /posts/:postId/comments, GET => /comments/:id;

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -7,8 +7,8 @@
        "createdAt": "2023-06-28T11:04:07.881Z",
        "id": "1687950247881",
        "likesInfo": Object {
          "dislikesCount": 1,
          "likesCount": 0,
    -     "myStatus": "Dislike",
    +     "myStatus": "Like",
        },
      }

      110 |       .catch((error) => handleTestError(error));
      111 |
    > 112 |     expect(itemAfterLikeAction).toStrictEqual(expectedItemWithLike);
          |                                 ^
      113 |   }
      114 | };
      115 |

      at performLikeTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestLikesFlow.ts:112:33)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/commentsLikes-describe-v2.ts:114:7)

  > Homework 11  Comment likes  PUT -> "/comments/:commentId/like-status": create comment then:
   like the comment by user 1;
   dislike the comment by user 1;
   set 'none' status by user 1;
   get the comment after each like by user 1; status 204;  used additional methods: POST => /blogs, POST => /posts, POST => /posts/:postId/comments, GET => /comments/:id;

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -7,8 +7,8 @@
        "createdAt": "2023-06-28T11:04:11.481Z",
        "id": "1687950251481",
        "likesInfo": Object {
          "dislikesCount": 1,
          "likesCount": 0,
    -     "myStatus": "Dislike",
    +     "myStatus": "Like",
        },
      }

      110 |       .catch((error) => handleTestError(error));
      111 |
    > 112 |     expect(itemAfterLikeAction).toStrictEqual(expectedItemWithLike);
          |                                 ^
      113 |   }
      114 | };
      115 |

      at performLikeTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestLikesFlow.ts:112:33)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/commentsLikes-describe-v2.ts:176:7)

  > Homework 11  Comment likes  PUT -> "/comments/:commentId/like-status": create comment then:
   like the comment by user 1 then get by user 2;
   dislike the comment by user 2 then get by the user 1; status 204;  used additional methods: POST => /blogs, POST => /posts, POST => /posts/:postId/comments, GET => /comments/:id;

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -7,8 +7,8 @@
        "createdAt": "2023-06-28T11:04:12.530Z",
        "id": "1687950252530",
        "likesInfo": Object {
          "dislikesCount": 0,
          "likesCount": 1,
    -     "myStatus": "None",
    +     "myStatus": "Like",
        },
      }

      110 |       .catch((error) => handleTestError(error));
      111 |
    > 112 |     expect(itemAfterLikeAction).toStrictEqual(expectedItemWithLike);
          |                                 ^
      113 |   }
      114 | };
      115 |

      at performLikeTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestLikesFlow.ts:112:33)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/commentsLikes-describe-v2.ts:207:7)

  > Homework 11  Comment likes  GET -> "/posts/:postId/comments": create 6 comments then:
  like comment 1 by user 1, user 2;
  like comment 2 by user 2, user 3;
  dislike comment 3 by user 1;
  like comment 4 by user 1, user 4, user 2, user 3;
  like comment 5 by user 2, dislike by user 3;
  like comment 6 by user 1, dislike by user 2.
  Get the comments by user 1 after all likes
  ; status 200; content: comments array for post with pagination;  used additional methods: POST => /blogs, POST => /posts, POST => /posts/:postId/comments, PUT -> /posts/:postId/like-status;

    Passed queryParams: ""

    Expected: {"pagesCount":1,"page":1,"pageSize":10,"totalCount":6,"items":[{"id":"1687950255648","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-28T11:04:15.648Z","likesInfo":{"likesCount":1,"dislikesCount":1,"myStatus":"Like"}},{"id":"1687950255496","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-28T11:04:15.496Z","likesInfo":{"likesCount":1,"dislikesCount":1,"myStatus":"None"}},{"id":"1687950255337","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-28T11:04:15.337Z","likesInfo":{"likesCount":4,"dislikesCount":0,"myStatus":"Like"}},{"id":"1687950255132","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-28T11:04:15.132Z","likesInfo":{"likesCount":0,"dislikesCount":1,"myStatus":"Dislike"}},{"id":"1687950254950","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-28T11:04:14.950Z","likesInfo":{"likesCount":2,"dislikesCount":0,"myStatus":"None"}},{"id":"1687950253630","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"content":"length_21-weqweqweqwq","createdAt":"2023-06-28T11:04:13.630Z","likesInfo":{"likesCount":2,"dislikesCount":0,"myStatus":"Like"}}]}

    Received: {"pagesCount":1,"page":1,"pageSize":10,"totalCount":6,"items":[{"id":"1687950255648","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"createdAt":"2023-06-28T11:04:15.648Z","likesInfo":{"likesCount":0,"dislikesCount":0,"myStatus":"None"}},{"id":"1687950255496","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"createdAt":"2023-06-28T11:04:15.496Z","likesInfo":{"likesCount":0,"dislikesCount":0,"myStatus":"None"}},{"id":"1687950255337","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"createdAt":"2023-06-28T11:04:15.337Z","likesInfo":{"likesCount":0,"dislikesCount":0,"myStatus":"None"}},{"id":"1687950255132","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"createdAt":"2023-06-28T11:04:15.132Z","likesInfo":{"likesCount":0,"dislikesCount":0,"myStatus":"None"}},{"id":"1687950254950","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"createdAt":"2023-06-28T11:04:14.950Z","likesInfo":{"likesCount":0,"dislikesCount":0,"myStatus":"None"}},{"id":"1687950253630","content":"length_21-weqweqweqwq","commentatorInfo":{"userId":"701eecdb-569a-45f1-9c9d-31dbc6c4ff50","userLogin":"8336lg"},"createdAt":"2023-06-28T11:04:13.630Z","likesInfo":{"likesCount":0,"dislikesCount":0,"myStatus":"None"}}]}

    Attention: "addedAt": Any<String> is equal to any date string, don't worry about highlighting this field

    - Expected
    + Received

    @@ -7,13 +7,13 @@
            },
            "content": "length_21-weqweqweqwq",
            "createdAt": "2023-06-28T11:04:15.648Z",
            "id": "1687950255648",
            "likesInfo": Object {
    -         "dislikesCount": 1,
    -         "likesCount": 1,
    -         "myStatus": "Like",
    +         "dislikesCount": 0,
    +         "likesCount": 0,
    +         "myStatus": "None",
            },
          },
          Object {
            "commentatorInfo": Object {
              "userId": "701eecdb-569a-45f1-9c9d-31dbc6c4ff50",
    @@ -21,12 +21,12 @@
            },
            "content": "length_21-weqweqweqwq",
            "createdAt": "2023-06-28T11:04:15.496Z",
            "id": "1687950255496",
            "likesInfo": Object {
    -         "dislikesCount": 1,
    -         "likesCount": 1,
    +         "dislikesCount": 0,
    +         "likesCount": 0,
              "myStatus": "None",
            },
          },
          Object {
            "commentatorInfo": Object {
    @@ -36,12 +36,12 @@
            "content": "length_21-weqweqweqwq",
            "createdAt": "2023-06-28T11:04:15.337Z",
            "id": "1687950255337",
            "likesInfo": Object {
              "dislikesCount": 0,
    -         "likesCount": 4,
    -         "myStatus": "Like",
    +         "likesCount": 0,
    +         "myStatus": "None",
            },
          },
          Object {
            "commentatorInfo": Object {
              "userId": "701eecdb-569a-45f1-9c9d-31dbc6c4ff50",
    @@ -49,13 +49,13 @@
            },
            "content": "length_21-weqweqweqwq",
            "createdAt": "2023-06-28T11:04:15.132Z",
            "id": "1687950255132",
            "likesInfo": Object {
    -         "dislikesCount": 1,
    +         "dislikesCount": 0,
              "likesCount": 0,
    -         "myStatus": "Dislike",
    +         "myStatus": "None",
            },
          },
          Object {
            "commentatorInfo": Object {
              "userId": "701eecdb-569a-45f1-9c9d-31dbc6c4ff50",
    @@ -64,11 +64,11 @@
            "content": "length_21-weqweqweqwq",
            "createdAt": "2023-06-28T11:04:14.950Z",
            "id": "1687950254950",
            "likesInfo": Object {
              "dislikesCount": 0,
    -         "likesCount": 2,
    +         "likesCount": 0,
              "myStatus": "None",
            },
          },
          Object {
            "commentatorInfo": Object {
    @@ -78,12 +78,12 @@
            "content": "length_21-weqweqweqwq",
            "createdAt": "2023-06-28T11:04:13.630Z",
            "id": "1687950253630",
            "likesInfo": Object {
              "dislikesCount": 0,
    -         "likesCount": 2,
    -         "myStatus": "Like",
    +         "likesCount": 0,
    +         "myStatus": "None",
            },
          },
        ],
        "page": 1,
        "pageSize": 10,

      105 |
      106 |     if (expectedData) {
    > 107 |       expect(data).toBeEqualWithQueryParams(expectedData, queryParams, withDiffPrint);
          |                    ^
      108 |     }
      109 |   }
      110 | };

      at performQueryParamsChecker (src/tests/jest/back/testHelpers/performCheckers.ts:107:20)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/commentsLikes-describe-v2.ts:259:7)

  > Homework 11  Comment likes  Comment like body validation  PUT -> "/comments/:commentId/like-status": should return error if passed body is incorrect; status 400;  used additional methods: POST -> /blogs, POST -> /posts, POST -> /comments;



    Tested endpoint: comments/1687950259118/like-status

    Tested method: PUT

    Expected status: 400

    Received status: 400

    Passed body: {"likeStatus":""}

    Expected data: { errorsMessages: [{ message: Any<String>, field: "likeStatus" }] }

    Received data: "Bad Request"

      40 |     }
      41 |
    > 42 |     expect(response).toBeError(400, incorrectFields, requestBody, {
         |                      ^
      43 |       endpoint: url,
      44 |       method,
      45 |     });

      at performTestsWithIncorrectBody (src/tests/jest/back/testHelpers/performTestsWithIncorrectBody.ts:42:22)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/likes-body-validation-describe.ts:79:7)
