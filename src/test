  > Homework 12  Posts likes  PUT -> "/posts/:postId/like-status": create post then:
   like the post by user 1, user 2, user 3, user 4.
   get the post after each like by user 1.
   NewestLikes should be sorted in descending; status 204;  used additional methods: POST => /blogs, POST => /posts, GET => /posts/:id;

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 4
    + Received  + 4

    @@ -8,17 +8,17 @@
          "likesCount": 2,
          "myStatus": "Like",
          "newestLikes": Array [
            Object {
              "addedAt": Any<String>,
    -         "login": "7394lg",
    -         "userId": "4d6795a5-baff-4df2-a69b-779f6901209f",
    +         "login": "7393lg",
    +         "userId": "216ef1bc-15d4-4703-86e2-a3989169710a",
            },
            Object {
              "addedAt": Any<String>,
    -         "login": "7393lg",
    -         "userId": "216ef1bc-15d4-4703-86e2-a3989169710a",
    +         "login": "7394lg",
    +         "userId": "4d6795a5-baff-4df2-a69b-779f6901209f",
            },
          ],
        },
        "id": "1689911674641",
        "shortDescription": "description",

      110 |       .catch((error) => handleTestError(error));
      111 |
    > 112 |     expect(itemAfterLikeAction).toStrictEqual(expectedItemWithLike);
          |                                 ^
      113 |   }
      114 | };
      115 |

      at performLikeTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestLikesFlow.ts:112:33)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/postLikes-describe-v2.ts:84:7)

  > Homework 12  Posts likes  PUT -> "/posts/:postId/like-status": create post then:
   dislike the post by user 1, user 2;
   like the post by user 3;
   get the post after each like by user 1; status 204;  used additional methods: POST => /blogs, POST => /posts, GET => /posts/:id;

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 7

    @@ -5,11 +5,17 @@
        "createdAt": "2023-07-21T03:54:35.851Z",
        "extendedLikesInfo": Object {
          "dislikesCount": 1,
          "likesCount": 0,
          "myStatus": "Dislike",
    -     "newestLikes": Array [],
    +     "newestLikes": Array [
    +       Object {
    +         "addedAt": "2023-07-21T03:54:36.062Z",
    +         "login": "7393lg",
    +         "userId": "216ef1bc-15d4-4703-86e2-a3989169710a",
    +       },
    +     ],
        },
        "id": "1689911675851",
        "shortDescription": "description",
        "title": "post title",
      }

      110 |       .catch((error) => handleTestError(error));
      111 |
    > 112 |     expect(itemAfterLikeAction).toStrictEqual(expectedItemWithLike);
          |                                 ^
      113 |   }
      114 | };
      115 |

      at performLikeTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestLikesFlow.ts:112:33)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/postLikes-describe-v2.ts:115:7)

  > Homework 12  Posts likes  PUT -> "/posts/:postId/like-status": create post then:
   like the post by user 1;
   dislike the post by user 1;
   set 'none' status by user 1;
   get the post after each like by user 1; status 204;  used additional methods: POST => /blogs, POST => /posts, GET => /posts/:id;

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 7

    @@ -5,11 +5,17 @@
        "createdAt": "2023-07-21T03:54:38.087Z",
        "extendedLikesInfo": Object {
          "dislikesCount": 1,
          "likesCount": 0,
          "myStatus": "Dislike",
    -     "newestLikes": Array [],
    +     "newestLikes": Array [
    +       Object {
    +         "addedAt": "2023-07-21T03:54:38.853Z",
    +         "login": "7393lg",
    +         "userId": "216ef1bc-15d4-4703-86e2-a3989169710a",
    +       },
    +     ],
        },
        "id": "1689911678087",
        "shortDescription": "description",
        "title": "post title",
      }

      110 |       .catch((error) => handleTestError(error));
      111 |
    > 112 |     expect(itemAfterLikeAction).toStrictEqual(expectedItemWithLike);
          |                                 ^
      113 |   }
      114 | };
      115 |

      at performLikeTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestLikesFlow.ts:112:33)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/postLikes-describe-v2.ts:177:7)

  > Homework 12  Posts likes  PUT -> "/posts/:postId/like-status": create post then:
   like the post by user 1 then get by user 2;
   dislike the post by user 2 then get by the user 1; status 204;  used additional methods: POST => /blogs, POST => /posts, GET => /posts/:id;

    expect(received).toStrictEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 5

    @@ -11,10 +11,15 @@
            Object {
              "addedAt": Any<String>,
              "login": "7393lg",
              "userId": "216ef1bc-15d4-4703-86e2-a3989169710a",
            },
    +       Object {
    +         "addedAt": "2023-07-21T03:54:40.344Z",
    +         "login": "7394lg",
    +         "userId": "4d6795a5-baff-4df2-a69b-779f6901209f",
    +       },
          ],
        },
        "id": "1689911679698",
        "shortDescription": "description",
        "title": "post title",

      110 |       .catch((error) => handleTestError(error));
      111 |
    > 112 |     expect(itemAfterLikeAction).toStrictEqual(expectedItemWithLike);
          |                                 ^
      113 |   }
      114 | };
      115 |

      at performLikeTestFlow (src/tests/jest/back/testHelpers/performTestsFlow/performTestLikesFlow.ts:112:33)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/postLikes-describe-v2.ts:208:7)

  > Homework 12  Posts likes  GET -> "/posts": create 6 posts then:
  like post 1 by user 1, user 2;
  like post 2 by user 2, user 3;
  dislike post 3 by user 1;
  like post 4 by user 1, user 4, user 2, user 3;
  like post 5 by user 2, dislike by user 3;
  like post 6 by user 1, dislike by user 2.
  Get the posts by user 1 after all likes
  NewestLikes should be sorted in descending; status 200; content: posts array with pagination;  used additional methods: POST -> /blogs, POST -> /posts, PUT -> posts/:postId/like-status;

    Passed queryParams: ""

    Expected: {"pagesCount":1,"page":1,"pageSize":10,"totalCount":6,"items":[{"id":"1689911689018","createdAt":"2023-07-21T03:54:49.018Z","blogName":"new blog","content":"new post content","shortDescription":"description","title":"post title","blogId":"1689911687764","extendedLikesInfo":{"likesCount":1,"dislikesCount":1,"myStatus":"Like","newestLikes":[{"addedAt":Any<String>,"userId":"35cac103-5768-4f3a-b19e-712198481c7b","login":"905lg"}]}},{"id":"1689911688819","createdAt":"2023-07-21T03:54:48.819Z","blogName":"new blog","content":"new post content","shortDescription":"description","title":"post title","blogId":"1689911687764","extendedLikesInfo":{"likesCount":1,"dislikesCount":1,"myStatus":"None","newestLikes":[{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"}]}},{"id":"1689911688626","createdAt":"2023-07-21T03:54:48.626Z","blogName":"new blog","content":"new post content","shortDescription":"description","title":"post title","blogId":"1689911687764","extendedLikesInfo":{"likesCount":4,"dislikesCount":0,"myStatus":"Like","newestLikes":[{"addedAt":Any<String>,"userId":"502ce227-10a0-4633-8e65-217317076f06","login":"907lg"},{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"},{"addedAt":Any<String>,"userId":"7f335d7f-a34f-40f8-a32d-e029edfbdda4","login":"908lg"}]}},{"id":"1689911688434","createdAt":"2023-07-21T03:54:48.434Z","blogName":"new blog","content":"new post content","shortDescription":"description","title":"post title","blogId":"1689911687764","extendedLikesInfo":{"likesCount":0,"dislikesCount":1,"myStatus":"Dislike","newestLikes":[]}},{"id":"1689911688242","createdAt":"2023-07-21T03:54:48.242Z","blogName":"new blog","content":"new post content","shortDescription":"description","title":"post title","blogId":"1689911687764","extendedLikesInfo":{"likesCount":2,"dislikesCount":0,"myStatus":"None","newestLikes":[{"addedAt":Any<String>,"userId":"502ce227-10a0-4633-8e65-217317076f06","login":"907lg"},{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"}]}},{"id":"1689911687969","createdAt":"2023-07-21T03:54:47.969Z","blogName":"new blog","content":"new post content","shortDescription":"description","title":"post title","blogId":"1689911687764","extendedLikesInfo":{"likesCount":2,"dislikesCount":0,"myStatus":"Like","newestLikes":[{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"},{"addedAt":Any<String>,"userId":"35cac103-5768-4f3a-b19e-712198481c7b","login":"905lg"}]}}]}

    Received: {"pagesCount":1,"page":1,"pageSize":10,"totalCount":6,"items":[{"id":"1689911689018","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911687764","blogName":"new blog","createdAt":"2023-07-21T03:54:49.018Z"},{"id":"1689911688819","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911687764","blogName":"new blog","createdAt":"2023-07-21T03:54:48.819Z"},{"id":"1689911688626","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911687764","blogName":"new blog","createdAt":"2023-07-21T03:54:48.626Z"},{"id":"1689911688434","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911687764","blogName":"new blog","createdAt":"2023-07-21T03:54:48.434Z"},{"id":"1689911688242","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911687764","blogName":"new blog","createdAt":"2023-07-21T03:54:48.242Z"},{"id":"1689911687969","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911687764","blogName":"new blog","createdAt":"2023-07-21T03:54:47.969Z"}]}

    Attention: "addedAt": Any<String> is equal to any date string, don't worry about highlighting this field

    - Expected
    + Received

    @@ -3,141 +3,55 @@
          Object {
            "blogId": "1689911687764",
            "blogName": "new blog",
            "content": "new post content",
            "createdAt": "2023-07-21T03:54:49.018Z",
    -       "extendedLikesInfo": Object {
    -         "dislikesCount": 1,
    -         "likesCount": 1,
    -         "myStatus": "Like",
    -         "newestLikes": Array [
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "905lg",
    -             "userId": "35cac103-5768-4f3a-b19e-712198481c7b",
    -           },
    -         ],
    -       },
            "id": "1689911689018",
            "shortDescription": "description",
            "title": "post title",
          },
          Object {
            "blogId": "1689911687764",
            "blogName": "new blog",
            "content": "new post content",
            "createdAt": "2023-07-21T03:54:48.819Z",
    -       "extendedLikesInfo": Object {
    -         "dislikesCount": 1,
    -         "likesCount": 1,
    -         "myStatus": "None",
    -         "newestLikes": Array [
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "906lg",
    -             "userId": "e4902f25-f33f-47a5-a13b-18ffe9274a7a",
    -           },
    -         ],
    -       },
            "id": "1689911688819",
            "shortDescription": "description",
            "title": "post title",
          },
          Object {
            "blogId": "1689911687764",
            "blogName": "new blog",
            "content": "new post content",
            "createdAt": "2023-07-21T03:54:48.626Z",
    -       "extendedLikesInfo": Object {
    -         "dislikesCount": 0,
    -         "likesCount": 4,
    -         "myStatus": "Like",
    -         "newestLikes": Array [
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "907lg",
    -             "userId": "502ce227-10a0-4633-8e65-217317076f06",
    -           },
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "906lg",
    -             "userId": "e4902f25-f33f-47a5-a13b-18ffe9274a7a",
    -           },
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "908lg",
    -             "userId": "7f335d7f-a34f-40f8-a32d-e029edfbdda4",
    -           },
    -         ],
    -       },
            "id": "1689911688626",
            "shortDescription": "description",
            "title": "post title",
          },
          Object {
            "blogId": "1689911687764",
            "blogName": "new blog",
            "content": "new post content",
            "createdAt": "2023-07-21T03:54:48.434Z",
    -       "extendedLikesInfo": Object {
    -         "dislikesCount": 1,
    -         "likesCount": 0,
    -         "myStatus": "Dislike",
    -         "newestLikes": Array [],
    -       },
            "id": "1689911688434",
            "shortDescription": "description",
            "title": "post title",
          },
          Object {
            "blogId": "1689911687764",
            "blogName": "new blog",
            "content": "new post content",
            "createdAt": "2023-07-21T03:54:48.242Z",
    -       "extendedLikesInfo": Object {
    -         "dislikesCount": 0,
    -         "likesCount": 2,
    -         "myStatus": "None",
    -         "newestLikes": Array [
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "907lg",
    -             "userId": "502ce227-10a0-4633-8e65-217317076f06",
    -           },
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "906lg",
    -             "userId": "e4902f25-f33f-47a5-a13b-18ffe9274a7a",
    -           },
    -         ],
    -       },
            "id": "1689911688242",
            "shortDescription": "description",
            "title": "post title",
          },
          Object {
            "blogId": "1689911687764",
            "blogName": "new blog",
            "content": "new post content",
            "createdAt": "2023-07-21T03:54:47.969Z",
    -       "extendedLikesInfo": Object {
    -         "dislikesCount": 0,
    -         "likesCount": 2,
    -         "myStatus": "Like",
    -         "newestLikes": Array [
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "906lg",
    -             "userId": "e4902f25-f33f-47a5-a13b-18ffe9274a7a",
    -           },
    -           Object {
    -             "addedAt": Any<String>,
    -             "login": "905lg",
    -             "userId": "35cac103-5768-4f3a-b19e-712198481c7b",
    -           },
    -         ],
    -       },
            "id": "1689911687969",
            "shortDescription": "description",
            "title": "post title",
          },
        ],

      105 |
      106 |     if (expectedData) {
    > 107 |       expect(data).toBeEqualWithQueryParams(expectedData, queryParams, withDiffPrint);
          |                    ^
      108 |     }
      109 |   }
      110 | };

      at performQueryParamsChecker (src/tests/jest/back/testHelpers/performCheckers.ts:107:20)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/postLikes-describe-v2.ts:254:7)

  > Homework 12  Posts likes  GET -> "/blogs/:blogId/posts": create 6 posts then:
  like post 1 by user 1, user 2;
  like post 2 by user 2, user 3;
  dislike post 3 by user 1;
  like post 4 by user 1, user 4, user 2, user 3;
  like post 5 by user 2, dislike by user 3;
  like post 6 by user 1, dislike by user 2.
  Get the posts by user 1 after all likes
  NewestLikes should be sorted in descending; status 200; content: posts array with pagination;  used additional methods: POST -> /blogs, POST -> /blogs/:blogId/posts, PUT -> posts/:postId/like-status;

    Passed queryParams: ""

    Expected: {"pagesCount":1,"page":1,"pageSize":10,"totalCount":6,"items":[{"id":"1689911693724","createdAt":"2023-07-21T03:54:53.724Z","blogName":"new blog","blogId":"1689911692480","content":"new post content","shortDescription":"description","title":"post title","extendedLikesInfo":{"likesCount":1,"dislikesCount":1,"myStatus":"Like","newestLikes":[{"addedAt":Any<String>,"userId":"35cac103-5768-4f3a-b19e-712198481c7b","login":"905lg"}]}},{"id":"1689911693512","createdAt":"2023-07-21T03:54:53.512Z","blogName":"new blog","blogId":"1689911692480","content":"new post content","shortDescription":"description","title":"post title","extendedLikesInfo":{"likesCount":1,"dislikesCount":1,"myStatus":"None","newestLikes":[{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"}]}},{"id":"1689911693306","createdAt":"2023-07-21T03:54:53.306Z","blogName":"new blog","blogId":"1689911692480","content":"new post content","shortDescription":"description","title":"post title","extendedLikesInfo":{"likesCount":4,"dislikesCount":0,"myStatus":"Like","newestLikes":[{"addedAt":Any<String>,"userId":"502ce227-10a0-4633-8e65-217317076f06","login":"907lg"},{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"},{"addedAt":Any<String>,"userId":"7f335d7f-a34f-40f8-a32d-e029edfbdda4","login":"908lg"}]}},{"id":"1689911693094","createdAt":"2023-07-21T03:54:53.094Z","blogName":"new blog","blogId":"1689911692480","content":"new post content","shortDescription":"description","title":"post title","extendedLikesInfo":{"likesCount":0,"dislikesCount":1,"myStatus":"Dislike","newestLikes":[]}},{"id":"1689911692891","createdAt":"2023-07-21T03:54:52.891Z","blogName":"new blog","blogId":"1689911692480","content":"new post content","shortDescription":"description","title":"post title","extendedLikesInfo":{"likesCount":2,"dislikesCount":0,"myStatus":"None","newestLikes":[{"addedAt":Any<String>,"userId":"502ce227-10a0-4633-8e65-217317076f06","login":"907lg"},{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"}]}},{"id":"1689911692687","createdAt":"2023-07-21T03:54:52.687Z","blogName":"new blog","blogId":"1689911692480","content":"new post content","shortDescription":"description","title":"post title","extendedLikesInfo":{"likesCount":2,"dislikesCount":0,"myStatus":"Like","newestLikes":[{"addedAt":Any<String>,"userId":"e4902f25-f33f-47a5-a13b-18ffe9274a7a","login":"906lg"},{"addedAt":Any<String>,"userId":"35cac103-5768-4f3a-b19e-712198481c7b","login":"905lg"}]}}]}

    Received: {"pagesCount":1,"page":1,"pageSize":10,"totalCount":6,"items":[{"id":"1689911693724","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911692480","blogName":"new blog","createdAt":"2023-07-21T03:54:53.724Z"},{"id":"1689911693512","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911692480","blogName":"new blog","createdAt":"2023-07-21T03:54:53.512Z"},{"id":"1689911693306","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911692480","blogName":"new blog","createdAt":"2023-07-21T03:54:53.306Z"},{"id":"1689911693094","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911692480","blogName":"new blog","createdAt":"2023-07-21T03:54:53.094Z"},{"id":"1689911692891","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911692480","blogName":"new blog","createdAt":"2023-07-21T03:54:52.891Z"},{"id":"1689911692687","title":"post title","shortDescription":"description","content":"new post content","blogId":"1689911692480","blogName":"new blog","createdAt":"2023-07-21T03:54:52.687Z"}]}

      105 |
      106 |     if (expectedData) {
    > 107 |       expect(data).toBeEqualWithQueryParams(expectedData, queryParams, withDiffPrint);
          |                    ^
      108 |     }
      109 |   }
      110 | };

      at performQueryParamsChecker (src/tests/jest/back/testHelpers/performCheckers.ts:107:20)
          at runMicrotasks (<anonymous>)
      at Object.<anonymous> (src/tests/jest/back/describes/likes/postLikes-describe-v2.ts:306:7)
